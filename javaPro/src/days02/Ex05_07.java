package days02;

public class Ex05_07 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		/*
		 * [진법변환]
		 * 10진법 : 0 1 2 3 4 5 6 7 8 9 
		 * 2진법 : 0 1
		 * 
		 * 10 -> byte i = 10;
		 *     [0][0][0][0][1][0][1][0]
		 *     
		 *  	short s = 10;
		 *  	[0][0][0][0][0][0][0][0] [0][0][0][0][1][0][1][0]
		 *  
		 *   10 -> 012 (8진수)  8 ㄴ 10
		 *                       ㄴ  1 --2
		 *                          0 --1
		 *                          
		 *    10 - > 0xa      16ㄴ 10
		 *    						0 -- 10
		 * */
		
		// 10 -> [0][0][0][0][1][0][1][0]
		//음수 표현
		//1. 부호와 절대치
		//2. 1의 보수법
		//3. (현재) 2의 보수법
		byte b = -10;
		//1번 방법 
		// |-10| 절대값 = 10
		// 0000 1010
		// [부호비트][0][0][0][1][0][1][0]  양수면 부호비트가 0 음수면 1
		//[1][0][0][0] [0][0][0][0] -0
		//[0][0][0][0] [0][0][0][0]  0       0이 두개로 표현되는 문제점을 가짐
		
		//2번 방법 : 1의 보수법
		//제일 먼저 부화와 절대치를 구한다. |-10| = 10
		//0000 1010 이진수를 구한 후
		//보수를 취한다. 2진수에서 1의 보수는 0. 0은 1
		//1111 0101
		
		//3번 방법 : 2의 보수법
		//1의 보수를 취한 후
		// 1111 0101 
		//+0000 0001  (더하기 1을 한다)
		// 1111 0110  --> 2의 보수를 한 -10 값

		//[문제] 어떤 음수가 2의 보수법 저장 : 1010 1010
		// 음수 얼마일까요?
		
		// 1010 1010
		//-0000 0001
		// 1010 1001
		
		// 0101 0110
		// 64 + 16 + 4 + 2  
		// 86

	}

}
